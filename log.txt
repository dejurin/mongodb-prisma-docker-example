#0 building with "desktop-linux" instance using docker driver

#1 [app internal] load .dockerignore
#1 transferring context: 2B done
#1 DONE 0.0s

#2 [app internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.03kB done
#2 DONE 0.0s

#3 [app internal] load metadata for docker.io/library/node:alpine
#3 DONE 0.5s

#4 [app internal] load build context
#4 DONE 0.0s

#5 [app base 1/4] FROM docker.io/library/node:alpine@sha256:37750e51d61bef92165b2e29a77da4277ba0777258446b7a9c99511f119db096
#5 resolve docker.io/library/node:alpine@sha256:37750e51d61bef92165b2e29a77da4277ba0777258446b7a9c99511f119db096 done
#5 DONE 0.0s

#4 [app internal] load build context
#4 transferring context: 441B done
#4 DONE 0.0s

#6 [app build 1/6] RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
#6 CACHED

#7 [app base 2/4] RUN corepack enable
#7 CACHED

#8 [app build 2/6] RUN pnpm dlx prisma -v
#8 CACHED

#9 [app base 4/4] WORKDIR /home/app
#9 CACHED

#10 [app base 3/4] COPY . /home/app
#10 CACHED

#11 [app build 3/6] RUN pnpm dlx prisma init --datasource-provider mongodb
#11 CACHED

#12 [app prod-deps 1/1] RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --prod --frozen-lockfile
#12 CACHED

#13 [app stage-3 1/2] COPY --from=prod-deps /home/app/node_modules /home/app/node_modules
#13 CACHED

#14 [app build 4/6] RUN pnpm dlx prisma db pull --force
#14 0.905 Progress: resolved 1, reused 0, downloaded 0, added 0
#14 0.976 Packages: +2
#14 0.976 ++
#14 1.171 Progress: resolved 2, reused 2, downloaded 0, added 2, done
#14 1.663 Prisma schema loaded from prisma/schema.prisma
#14 1.664 Environment variables loaded from .env
#14 1.667 Datasource "db": MongoDB database "my_db" at "mongodb:27017"
#14 1.670 
#14 1.672 - Introspecting based on datasource defined in prisma/schema.prisma
#14 31.70 Error: MongoDB error
#14 31.70 Kind: Server selection timeout: No available servers. Topology: { Type: Unknown, Servers: [ { Address: mongodb:27017, Type: Unknown, Error: Kind: I/O error: failed to lookup address information: Name does not resolve, labels: {} } ] }, labels: {}
#14 31.70 
#14 31.70 
#14 31.70 ✖ Introspecting based on datasource defined in prisma/schema.prisma
#14 31.70 
#14 ERROR: process "/bin/sh -c pnpm dlx prisma db pull --force" did not complete successfully: exit code: 1
------
 > [app build 4/6] RUN pnpm dlx prisma db pull --force:
1.664 Environment variables loaded from .env
1.667 Datasource "db": MongoDB database "my_db" at "mongodb:27017"
1.670 
1.672 - Introspecting based on datasource defined in prisma/schema.prisma
31.70 Error: MongoDB error
31.70 Kind: Server selection timeout: No available servers. Topology: { Type: Unknown, Servers: [ { Address: mongodb:27017, Type: Unknown, Error: Kind: I/O error: failed to lookup address information: Name does not resolve, labels: {} } ] }, labels: {}
31.70 
31.70 
31.70 ✖ Introspecting based on datasource defined in prisma/schema.prisma
31.70 
------
#0 building with "desktop-linux" instance using docker driver

#1 [app internal] load build definition from Dockerfile
#1 DONE 0.0s

#2 [app internal] load .dockerignore
#2 transferring context: 2B done
#2 DONE 0.0s

#1 [app internal] load build definition from Dockerfile
#1 transferring dockerfile: 1.05kB done
#1 DONE 0.0s

#3 [app internal] load metadata for docker.io/library/node:alpine
#3 DONE 0.5s

#4 [app internal] load build context
#4 DONE 0.0s

#5 [app base 1/4] FROM docker.io/library/node:alpine@sha256:37750e51d61bef92165b2e29a77da4277ba0777258446b7a9c99511f119db096
#5 resolve docker.io/library/node:alpine@sha256:37750e51d61bef92165b2e29a77da4277ba0777258446b7a9c99511f119db096 0.0s done
#5 DONE 0.0s

#4 [app internal] load build context
#4 transferring context: 1.46kB done
#4 DONE 0.0s

#6 [app base 2/4] RUN corepack enable
#6 CACHED

#7 [app base 3/4] COPY . /home/app
#7 DONE 0.0s

#8 [app base 4/4] WORKDIR /home/app
#8 DONE 0.0s

#9 [app prod-deps 1/1] RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --prod --frozen-lockfile
#9 2.095 Lockfile is up to date, resolution step is skipped
#9 2.103 Progress: resolved 1, reused 0, downloaded 0, added 0
#9 2.114 Packages: +4
#9 2.114 ++++
#9 2.361 Progress: resolved 4, reused 4, downloaded 0, added 4, done
#9 2.455 
#9 2.455 dependencies:
#9 2.455 + @prisma/client 5.4.1
#9 2.455 
#9 2.455 devDependencies: skipped
#9 2.455 
#9 2.458 Done in 713ms
#9 DONE 2.6s

#10 [app stage-3 1/2] COPY --from=prod-deps /home/app/node_modules /home/app/node_modules
#10 DONE 0.1s

#11 [app build 1/7] RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile
#11 2.075 Lockfile is up to date, resolution step is skipped
#11 2.085 Progress: resolved 1, reused 0, downloaded 0, added 0
#11 2.122 Packages: +14
#11 2.122 ++++++++++++++
#11 2.493 Progress: resolved 14, reused 14, downloaded 0, added 14, done
#11 2.704 
#11 2.704 dependencies:
#11 2.704 + @prisma/client 5.4.1
#11 2.704 
#11 2.704 devDependencies:
#11 2.704 + @types/node 20.8.2
#11 2.704 + prisma 5.4.1
#11 2.704 + tsx 3.13.0
#11 2.704 + typescript 5.2.2
#11 2.704 
#11 2.730 Done in 991ms
#11 DONE 2.8s

#12 [app build 2/7] RUN pnpm dlx prisma -v
#12 1.042 Progress: resolved 1, reused 0, downloaded 0, added 0
#12 1.349 Packages: +2
#12 1.349 ++
#12 1.503 Progress: resolved 2, reused 0, downloaded 2, added 2, done
#12 1.511 .../node_modules/@prisma/engines postinstall$ node scripts/postinstall.js
#12 2.121 .../node_modules/@prisma/engines postinstall: Done
#12 2.217 .../prisma@5.4.1/node_modules/prisma preinstall$ node scripts/preinstall-entry.js
#12 2.255 .../prisma@5.4.1/node_modules/prisma preinstall: Done
#12 2.762 Environment variables loaded from .env
#12 2.786 prisma                  : 5.4.1
#12 2.786 @prisma/client          : 5.4.1
#12 2.786 Current platform        : linux-musl-arm64-openssl-3.0.x
#12 2.786 Query Engine (Node-API) : libquery-engine 2f302df92bd8945e20ad4595a73def5b96afa54f (at ../../pnpm/store/v3/tmp/dlx-1/node_modules/.pnpm/@prisma+engines@5.4.1/node_modules/@prisma/engines/libquery_engine-linux-musl-arm64-openssl-3.0.x.so.node)
#12 2.786 Schema Engine           : schema-engine-cli 2f302df92bd8945e20ad4595a73def5b96afa54f (at ../../pnpm/store/v3/tmp/dlx-1/node_modules/.pnpm/@prisma+engines@5.4.1/node_modules/@prisma/engines/schema-engine-linux-musl-arm64-openssl-3.0.x)
#12 2.786 Schema Wasm             : @prisma/prisma-schema-wasm 5.3.1-2.61e140623197a131c2a6189271ffee05a7aa9a59
#12 2.786 Default Engines Hash    : 2f302df92bd8945e20ad4595a73def5b96afa54f
#12 2.786 Studio                  : 0.494.0
#12 DONE 2.9s

#13 [app build 3/7] RUN node -v
#13 0.209 v20.8.0
#13 DONE 0.2s

#14 [app build 4/7] RUN pnpm dlx prisma init --datasource-provider mongodb
#14 0.927 Progress: resolved 1, reused 0, downloaded 0, added 0
#14 0.999 Packages: +2
#14 0.999 ++
#14 1.206 Progress: resolved 2, reused 2, downloaded 0, added 2, done
#14 1.629 
#14 1.629 ✔ Your Prisma schema was created at prisma/schema.prisma
#14 1.629   You can now open it in your favorite editor.
#14 1.629 
#14 1.629 warn Prisma would have added DATABASE_URL but it already exists in .env
#14 1.629 warn You already have a .gitignore file. Don't forget to add `.env` in it to not commit any private information.
#14 1.629 
#14 1.629 Next steps:
#14 1.629 1. Set the DATABASE_URL in the .env file to point to your existing database. If your database has no tables yet, read https://pris.ly/d/getting-started
#14 1.629 2. Define models in the schema.prisma file.
#14 1.629 3. Run prisma generate to generate the Prisma Client. You can then start querying your database.
#14 1.629 
#14 1.629 More information in our documentation:
#14 1.629 https://pris.ly/d/getting-started
#14 1.629     
#14 DONE 1.7s

#15 [app build 5/7] RUN pnpm dlx prisma db pull --force
#15 1.025 Progress: resolved 1, reused 0, downloaded 0, added 0
#15 1.095 Packages: +2
#15 1.095 ++
#15 1.315 Progress: resolved 2, reused 2, downloaded 0, added 2, done
#15 1.745 Prisma schema loaded from prisma/schema.prisma
#15 1.745 Environment variables loaded from .env
#15 1.748 Datasource "db": MongoDB database "my_db" at "mongodb:27017"
#15 1.750 
#15 1.752 - Introspecting based on datasource defined in prisma/schema.prisma
#15 31.78 Error: MongoDB error
#15 31.78 Kind: Server selection timeout: No available servers. Topology: { Type: Unknown, Servers: [ { Address: mongodb:27017, Type: Unknown, Error: Kind: I/O error: failed to lookup address information: Name does not resolve, labels: {} } ] }, labels: {}
#15 31.78 
#15 31.78 
#15 31.78 ✖ Introspecting based on datasource defined in prisma/schema.prisma
#15 31.78 
#15 ERROR: process "/bin/sh -c pnpm dlx prisma db pull --force" did not complete successfully: exit code: 1
------
 > [app build 5/7] RUN pnpm dlx prisma db pull --force:
1.745 Environment variables loaded from .env
1.748 Datasource "db": MongoDB database "my_db" at "mongodb:27017"
1.750 
1.752 - Introspecting based on datasource defined in prisma/schema.prisma
31.78 Error: MongoDB error
31.78 Kind: Server selection timeout: No available servers. Topology: { Type: Unknown, Servers: [ { Address: mongodb:27017, Type: Unknown, Error: Kind: I/O error: failed to lookup address information: Name does not resolve, labels: {} } ] }, labels: {}
31.78 
31.78 
31.78 ✖ Introspecting based on datasource defined in prisma/schema.prisma
31.78 
------
